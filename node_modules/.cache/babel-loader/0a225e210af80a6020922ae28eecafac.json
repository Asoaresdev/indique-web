{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\Hackaton\\\\indique-web\\\\src\\\\Global\\\\globalState.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport GlobalStateContext from \"../Global/GlobalStateContext\";\nimport axios from \"axios\";\nimport useRequestData from \"../CustomHooks/useRequestData\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GlobalState(props) {\n  _s();\n\n  const [carrinho, setCarrinho] = useState({});\n  const [perfil, setPerfil] = useState({});\n  const [restaurante, setRestaurante] = useState({});\n  const [listaRestaurantes, setListaRestaurantes] = useState([]); // const [token, setToken] = useState(\"\")\n\n  const [searchInput, setSearchInput] = useState(\"\");\n  /* Controla input da barra de pesquisa */\n\n  const [filter, setFilter] = useState(\"\");\n  /* Controla o filtro do menu do feed */\n\n  const [popUp, setPopUp] = useState(false);\n  const [quantidade, setQuantidade] = useState(0);\n  const [idPedido, setIdPedido] = useState(\"\");\n  const states = {\n    carrinho,\n    perfil,\n    restaurante,\n    listaRestaurantes,\n    searchInput,\n    filter,\n    popUp,\n    quantidade,\n    idPedido\n  };\n  const setters = {\n    setCarrinho,\n    setPerfil,\n    setRestaurante,\n    setListaRestaurantes,\n    setSearchInput,\n    setFilter,\n    setPopUp,\n    setQuantidade,\n    setIdPedido\n  };\n  const requests = {};\n  return /*#__PURE__*/_jsxDEV(GlobalStateContext.Provider, {\n    value: {\n      states,\n      setters,\n      requests\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalState, \"VsXCBJY2NRmpbfU/EJrAaqTuNqA=\");\n\n_c = GlobalState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalState\");","map":{"version":3,"sources":["C:/Users/victo/Desktop/Hackaton/indique-web/src/Global/globalState.js"],"names":["React","GlobalStateContext","axios","useRequestData","useState","useEffect","GlobalState","props","carrinho","setCarrinho","perfil","setPerfil","restaurante","setRestaurante","listaRestaurantes","setListaRestaurantes","searchInput","setSearchInput","filter","setFilter","popUp","setPopUp","quantidade","setQuantidade","idPedido","setIdPedido","states","setters","requests","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,EAAD,CAA1D,CAJyC,CAKzC;;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAC5C,EAD4C,CAA9C;AAEG;;AACH,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAClC,EADkC,CAApC;AAEG;;AACH,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMsB,MAAM,GAAG;AACblB,IAAAA,QADa;AAEbE,IAAAA,MAFa;AAGbE,IAAAA,WAHa;AAIbE,IAAAA,iBAJa;AAKbE,IAAAA,WALa;AAMbE,IAAAA,MANa;AAObE,IAAAA,KAPa;AAQbE,IAAAA,UARa;AASbE,IAAAA;AATa,GAAf;AAWA,QAAMG,OAAO,GAAG;AACdlB,IAAAA,WADc;AAEdE,IAAAA,SAFc;AAGdE,IAAAA,cAHc;AAIdE,IAAAA,oBAJc;AAKdE,IAAAA,cALc;AAMdE,IAAAA,SANc;AAOdE,IAAAA,QAPc;AAQdE,IAAAA,aARc;AASdE,IAAAA;AATc,GAAhB;AAWA,QAAMG,QAAQ,GAAG,EAAjB;AAEA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,KAApC;AAAA,cACGrB,KAAK,CAACsB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA7CuBvB,W;;KAAAA,W","sourcesContent":["import React from \"react\";\r\nimport GlobalStateContext from \"../Global/GlobalStateContext\";\r\nimport axios from \"axios\";\r\nimport useRequestData from \"../CustomHooks/useRequestData\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function GlobalState(props) {\r\n  const [carrinho, setCarrinho] = useState({});\r\n  const [perfil, setPerfil] = useState({});\r\n  const [restaurante, setRestaurante] = useState({});\r\n  const [listaRestaurantes, setListaRestaurantes] = useState([]);\r\n  // const [token, setToken] = useState(\"\")\r\n  const [searchInput, setSearchInput] = useState(\r\n    \"\"\r\n  ); /* Controla input da barra de pesquisa */\r\n  const [filter, setFilter] = useState(\r\n    \"\"\r\n  ); /* Controla o filtro do menu do feed */\r\n  const [popUp, setPopUp] = useState(false);\r\n  const [quantidade, setQuantidade] = useState(0);\r\n  const [idPedido, setIdPedido] = useState(\"\");\r\n\r\n  const states = {\r\n    carrinho,\r\n    perfil,\r\n    restaurante,\r\n    listaRestaurantes,\r\n    searchInput,\r\n    filter,\r\n    popUp,\r\n    quantidade,\r\n    idPedido,\r\n  };\r\n  const setters = {\r\n    setCarrinho,\r\n    setPerfil,\r\n    setRestaurante,\r\n    setListaRestaurantes,\r\n    setSearchInput,\r\n    setFilter,\r\n    setPopUp,\r\n    setQuantidade,\r\n    setIdPedido,\r\n  };\r\n  const requests = {};\r\n\r\n  return (\r\n    <GlobalStateContext.Provider value={{ states, setters, requests }}>\r\n      {props.children}\r\n    </GlobalStateContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}